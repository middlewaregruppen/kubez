---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubez
rules:
- apiGroups:
  - ""
  resources:
  - services
  - pods
  - pods/log
  - pods/status
  - deployments
  - deployments/scale
  - deployments/status
  - replicasets
  - replicasets/scale
  - replicasets/status
  - namespaces
  - namespaces/status
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "extensions"
  resources:
  - deployments
  - deployments/scale
  - deployments/status
  - replicasets
  - replicasets/scale
  - replicasets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - configmaps
  - services
  verbs:
  - create
  - update
- apiGroups:
  - "apps"
  resources:
  - deployments
  - replicasets
  verbs:
  - create
  - list 
  - get 
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubez
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubez
subjects:
- kind: ServiceAccount
  name: kubez
  namespace: kubez
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubez
---
apiVersion: v1
kind: Service
metadata:
  name: kubez
spec:
  type: NodePort
  selector:
    app: kubez-app
  ports:
  - nodePort: 31503
    port: 3000
    targetPort: http
    name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubez-app
spec:
  selector:
    matchLabels:
      app: kubez-app
  template:
    metadata:
      labels:
        app: kubez-app
    spec:
      containers:
      - name: kubez
        image: docker.io/middlewaregruppen/kubez:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
          name: http
        resources:
          requests:
            cpu: 300m
            memory: 100Mi
          limits:
            cpu: 300m
            memory: 100Mi
      serviceAccount: kubez
      serviceAccountName: kubez